{"version":3,"sources":["components/Form.js","components/Todo.js","components/List.js","App.js","reportWebVitals.js","index.js"],"names":["Form","useContext","Context","todo","setTodo","todos","setTodos","status","setStatus","setFilteredTodos","inputValue","useRef","useEffect","getLocalTodos","inputText","completed","id","Math","random","statusHandler","saveLocalTodos","filter","item","localStorage","setItem","JSON","stringify","getItem","console","log","todosLocal","parse","ref","name","type","placeholder","onClick","event","preventDefault","current","value","className","onChange","e","target","size","Todo","map","List","filteredTodos","index","React","createContext","App","useState","fadeClass","setFadeClass","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae63bf0e.chunk.js","sourcesContent":["import React, { useContext, useRef, useEffect } from 'react'\r\nimport {Context} from '../App'\r\nimport '../App.css'\r\n\r\nconst Form = function() {\r\n    const [todo, setTodo, todos, setTodos, status, setStatus, filteredTodos, setFilteredTodos] = useContext(Context);\r\n    const inputValue = useRef();\r\n\r\n    const addTodo = function(event) {\r\n        event.preventDefault();\r\n        setTodo(inputValue.current.value);\r\n        inputValue.current.value = '';\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLocalTodos()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(todo) {\r\n            setTodos([\r\n                ...todos, {inputText: todo, completed: false, id: Math.random(10) * 100}\r\n            ])\r\n        }\r\n\r\n    }, [todo])\r\n\r\n    useEffect(() => {\r\n        statusHandler()\r\n        saveLocalTodos()\r\n\r\n    }, [todos, status])\r\n\r\n    const statusHandler = function() {\r\n        switch(status) {\r\n            case \"Completed\":\r\n                setFilteredTodos(todos.filter(item => item.completed === true))\r\n                break;\r\n            case \"Uncompleted\":\r\n                setFilteredTodos(todos.filter(item => item.completed === false))\r\n                break;  \r\n            default:\r\n                setFilteredTodos(todos)  \r\n                break;\r\n        }\r\n    }\r\n\r\n    const checkStatus = function(e) {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    const saveLocalTodos = () => {\r\n        localStorage.setItem('todos', JSON.stringify(todos))\r\n    }\r\n\r\n    const getLocalTodos = () => {\r\n        if(localStorage.getItem('todos') === null) {\r\n            console.log('nichego')\r\n            localStorage.setItem('todos', JSON.stringify([]));\r\n        } else {\r\n            console.log('vse')\r\n            let todosLocal = JSON.parse(localStorage.getItem('todos'));\r\n            setTodos(todosLocal)\r\n        }\r\n    }\r\n\r\n\treturn (\r\n        <>\r\n    \t<form>\r\n            <input ref={inputValue} name=\"todo_input\" type=\"text\" placeholder=\"Type a todo here...\"></input>\r\n            <button onClick={addTodo} className=\"btn_add\">+</button>\r\n\r\n            <select onChange={checkStatus} size=\"1\" name=\"todos\">\r\n                <option value=\"All\">All</option>\r\n                <option value=\"Completed\">Completed</option>\r\n                <option value=\"Uncompleted\">Uncompleted</option>\r\n            </select>\r\n        </form>\r\n        \r\n        </>\r\n\t);\r\n}\r\n\r\nexport default Form;\r\n","import React, { useContext } from 'react'\r\nimport {Context} from '../App'\r\nimport '../App.css'\r\n\r\nconst Todo = function({ item, id }) {\r\n\tconst [todo, setTodo, todos, setTodos, status, setStatus, filteredTodos, setFilteredTodos, fadeClass, setFadeClass] = useContext(Context);\r\n\r\n\tconst setCompleted = function(e) {\r\n\t\tsetTodos(todos.map((item, id) => {\r\n\t\t\tif(item.id == e.target.id) item.completed = !item.completed;\r\n\t\t\treturn item\r\n\t\t}))\r\n\t}\r\n\r\n\tconst addFade = function() {\r\n\t\tconsole.log('do some stuff')\r\n\t}\r\n\r\n\tconst removeTodo = function(e) {\r\n\t\tsetTodos(todos.filter((item, id) => item.id != e.target.id))\r\n\t}\r\n\r\n\treturn (\r\n    \t    <li className=\"todo\">\r\n\t\t\t\t<div className={`todo_title ${item.completed ? \"todo_completed\" : \"\"}`}>{item.inputText}</div>\r\n\t\t\t\t<button id={id} onClick={setCompleted} className=\"todo_btn_completed\">✔️</button>\r\n\t\t\t\t<button id={id} onClick={removeTodo} className=\"todo_btn_trash\"></button>\r\n\t\t\t</li>\r\n\t);\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useContext } from 'react'\r\nimport Todo from './Todo'\r\nimport {Context} from '../App'\r\nimport '../App.css'\r\n\r\nconst List = function() {\r\n\tconst [todo, setTodo, todos, setTodos, status, setStatus, filteredTodos, setFilteredTodos] = useContext(Context);\r\n\r\n\treturn (\r\n    \t<ul className=\"todos\">\r\n\t\t\t{filteredTodos.map((item, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Todo key={index} item={item} id={item.id}/>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</ul>\r\n\t);\r\n}\r\n\r\nexport default List;\r\n","import React, {useState} from 'react'\nimport Form from './components/Form'\nimport List from './components/List'\n\nexport const Context = React.createContext();\n\nconst App = function() {\n\tconst [todo, setTodo] = useState('');\n\tconst [todos, setTodos] = useState([]);\n\tconst [status, setStatus] = useState('');\n\tconst [filteredTodos, setFilteredTodos] = useState([]);\n\tconst [fadeClass, setFadeClass] = useState(false);\n\n\treturn (\n\t\t<Context.Provider value={[todo, setTodo, todos, setTodos, status, setStatus, filteredTodos, setFilteredTodos, fadeClass, setFadeClass]}>\n\t\t\t<div className=\"app\">\n\t\t\t\t<h1 className=\"header\">Todo List</h1>\n\t\t\t\t<Form />\n\t\t\t\t<List />\n\t\t\t</div>\n\t\t</Context.Provider>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}